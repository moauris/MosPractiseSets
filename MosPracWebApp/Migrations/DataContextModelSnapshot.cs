// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MosPracWebApp.Models;

namespace MosPracWebApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MosPracWebApp.Models.Option", b =>
                {
                    b.Property<int>("OptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("OptionID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("MosPracWebApp.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionSetID")
                        .HasColumnType("int");

                    b.HasKey("QuestionID");

                    b.HasIndex("QuestionSetID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MosPracWebApp.Models.QuestionSet", b =>
                {
                    b.Property<int>("QuestionSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionSetID");

                    b.ToTable("QuestionSets");
                });

            modelBuilder.Entity("MosPracWebApp.Models.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionSetID")
                        .HasColumnType("int");

                    b.HasKey("TopicID");

                    b.HasIndex("QuestionSetID");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("MosPracWebApp.Models.Option", b =>
                {
                    b.HasOne("MosPracWebApp.Models.Question", null)
                        .WithMany("Options")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MosPracWebApp.Models.Question", b =>
                {
                    b.HasOne("MosPracWebApp.Models.QuestionSet", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuestionSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MosPracWebApp.Models.Topic", b =>
                {
                    b.HasOne("MosPracWebApp.Models.QuestionSet", null)
                        .WithMany("Topics")
                        .HasForeignKey("QuestionSetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MosPracWebApp.Models.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("MosPracWebApp.Models.QuestionSet", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
